<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Timing Attack on Jiaangk Blog</title>
    <link>https://jiaangk.github.io/tags/timing-attack/</link>
    <description>Recent content in Timing Attack on Jiaangk Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2023 16:00:00 +0800</lastBuildDate><atom:link href="https://jiaangk.github.io/tags/timing-attack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux文件系统备忘录</title>
      <link>https://jiaangk.github.io/posts/linux-filesystem/</link>
      <pubDate>Mon, 28 Aug 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jiaangk.github.io/posts/linux-filesystem/</guid>
      <description>Linux文件系统与作为计算机启蒙所熟知的Windows系统有很大不同，以下面的系统：
Linux version 6.1.0-11-amd64 (debian-kernel@lists.debian.org) (gcc-12 (Debian 12.2.0-14) 12.2.0, GNU ld (GNU Binutils for Debian) 2.40) #1 SMP PREEMPT_DYNAMIC Debian 6.1.38-4 (2023-08-08)
为例，针对文件系统中的各个目录的功能制作一个备忘录方便查询。
boot是存放引导文件的目录，如开机时选择系统所使用的grub等，同时核心映像也存放于此，如上图的系统核心vmlinuz，以及引导程序initrd。
dev顾名思义即device，众所周知外部设备以文件的形式存在在Linux系统中，该目录下的文件提供了可以直接操控外部设备的接口。从本质上来说，dev目录被udev所管理，借由sysfs虚拟文件系统实现老版本中devfs的功能，提供用户空间控制设备的途径。</description>
    </item>
    
    <item>
      <title>Montgomery模乘</title>
      <link>https://jiaangk.github.io/posts/montgomery-mod/</link>
      <pubDate>Fri, 21 Jul 2023 20:41:00 +0800</pubDate>
      
      <guid>https://jiaangk.github.io/posts/montgomery-mod/</guid>
      <description>由于模运算非常慢，因此在实现RSA等算法时，引入了Montgomery模乘将模运算简化成了减法运算来进行，加快了模运算进行的速度。
问题的提出 加速 $xy \ mod \ N$ ，使得运算中不产生模 $N$ 运算。 $x, y$ 保证 $x, y &amp;lt; N$。
Montgomery约减 定义Montgomery约减 $REDC(T) = TR^{-1} \ mod \ N$ 。其中 $R &amp;gt; N$ 且 $gcd(N, R) = 1$ ， $R^-1$ 为 $R$ 在模 $N$ 意义下的逆元，即 $RR^{-1} \equiv 1 (mod \ N)$ 。取 $N&amp;rsquo;$ 使得 $RR^{-1} - NN&amp;rsquo; = 1$ ，由模运算的定义这样的 $N&amp;rsquo;$ 显然存在。算法的输入 $T$ 保证 $T &amp;lt; NR$。</description>
    </item>
    
    <item>
      <title>RSA算法及其实现</title>
      <link>https://jiaangk.github.io/posts/rsa-crt/</link>
      <pubDate>Sun, 09 Jul 2023 11:32:00 +0800</pubDate>
      
      <guid>https://jiaangk.github.io/posts/rsa-crt/</guid>
      <description>RSA Generation 取两个大质数 $p$ 和 $q$ ，为了安全性 $p$ 和 $q$ 长度应 大于 $2048$ 位； 设 $n = pq$； 设 $m = \phi(n) = (p-1)(q-1)$； 取 $e$，使得 $2 &amp;lt; e &amp;lt; m$且 $gcd(e, m) = 1$； 取 $d$，使得 $d \times e \equiv 1 \ (mod\ m)$； 此时，公钥为 $(n, e)$，私钥为 $(n, d)$。 Encryption 约定 $x$ 为 plaintext， $y$ 为 cyphertext。</description>
    </item>
    
  </channel>
</rss>
